name: "Deploy infrastucture"

on:
  push:
    branches:
      - main
    paths:
      - "**.tf"
      - ".github/workflows/terraform.yaml"
  workflow_dispatch:

concurrency: terraform

permissions:
  id-token: write
  contents: read

jobs:
  web:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/JorTurFer/netcoreconf-web
          tags: |
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  worker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/JorTurFer/netcoreconf-worker
          tags: |
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Worker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    needs: [web, worker]
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config=storage_account_name=${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME}} \
          -backend-config=container_name=${{ secrets.BACKEND_STORAGE_CONTAINER_NAME}} \
          -backend-config=resource_group_name=${{ secrets.BACKEND_STORAGE_RESOURCE_GROUP_NAME}}
        working-directory: deploy

      - name: Docker meta
        id: web-tag
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/JorTurFer/netcoreconf-web
          tags: |
            type=sha
      
      - name: Docker meta
        id: worker-tag
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/JorTurFer/netcoreconf-worker
          tags: |
            type=sha

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan
        working-directory: deploy
        env:
          TF_VAR_web_tag: ${{ steps.web-tag.outputs.tags }}
          TF_VAR_worker_tag: ${{ steps.worker-tag.outputs.tags }}

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve plan.tfplan
        working-directory: deploy
        env:
          TF_VAR_web_tag: ${{ steps.web-tag.outputs.tags }}
          TF_VAR_worker_tag: ${{ steps.worker-tag.outputs.tags }}
